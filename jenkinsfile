pipeline {
    agent {
        label 'docker-python-docker-agent'
    }

    options {
        timestamps()
    }

    triggers {
        pollSCM('H/2 * * * *')
    }

    environment {
        PYTHONUNBUFFERED = 1
        IMAGE_NAME = 'afzal23/jenkins-fastapi-app'
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                python -m venv venv
                . venv/bin/activate
                pip install --upgrade pip
                pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                . venv/bin/activate
                set -e
                python -m pytest test_app.py 2>&1 | tee pytest.log
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                docker build -t $IMAGE_NAME:$IMAGE_TAG .
                '''
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push $IMAGE_NAME:$IMAGE_TAG
                    docker logout
                    '''
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: 'pytest.log', onlyIfSuccessful: false
            echo 'üì¶ Pipeline execution completed.'
        }
        success {
            echo '‚úÖ Tests passed and Docker image pushed!'
        }
        failure {
            echo '‚ùå Something failed. Check logs.'
        }
    }
}
